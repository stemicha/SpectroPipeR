% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/norm_quant_module.R
\name{norm_quant_module}
\alias{norm_quant_module}
\title{SpectroPipeR: normalization & quantification module}
\usage{
norm_quant_module(
  SpectroPipeR_data = NULL,
  batch_adjusting = FALSE,
  sample__batch_meta_data_file = NULL,
  batch_adjusting_column = "",
  number_of_cores_adjusting = parallel::detectCores() - 2,
  covariate_adjusting_formula = "",
  covariate_adjusting_meta_data_file = "",
  skipping_MaxLFQ_median_norm = FALSE,
  costum_colors = NULL,
  print.plot = FALSE
)
}
\arguments{
\item{SpectroPipeR_data}{it is the SpectroPipeR_data list object generated by
the read_spectronaut_module() function}

\item{batch_adjusting}{logical - if batch adjusting with ComBat (sva package) should be performed;
default = FALSE}

\item{sample__batch_meta_data_file}{character - sample batch file; tab-delimited txt-file,
containing "R.FileName" column e.g. sample__batch_meta_data_file = "Sample_MetaData_Batches.txt"

\emph{example table for batch meta data:}\tabular{ll}{
   \if{html}{\out{<u>}} \strong{R.FileName} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{digest_batch} \if{html}{\out{</u>}} \cr
   20230403_TIMSTOF_1_S1-B11_1_6690 \tab 1 \cr
   20230403_TIMSTOF_2_S1-G11_1_6695 \tab 1 \cr
   20230403_TIMSTOF_3_S1-E7_1_6661 \tab 1 \cr
   20230403_TIMSTOF_4_S1-A9_1_6673 \tab 2 \cr
   20230403_TIMSTOF_7_S1-D8_1_6668 \tab 2 \cr
   20230403_TIMSTOF_9_S1-D3_1_6627 \tab 2 \cr
}


\strong{A good starting point for the generation of the table is the '*_ConditionSetup.tsv' in your Spectronaut Pipeline Report export folder}}

\item{batch_adjusting_column}{character - column name in sample__batch_meta_data_file,
which should be used for assigning the samples to batches}

\item{number_of_cores_adjusting}{numeric - number of processor cores used for batch or covariate
adjustment}

\item{covariate_adjusting_formula}{character - provide a formula passed to lm() for covariate
adjustment e.g. "log10_peptide_intensity ~ log10(CRP)+log10(age)+as.factor(sex)"; you may also use
ns() function e.g. "log10_peptide_intensity ~ ns(age, df=3)"}

\item{covariate_adjusting_meta_data_file}{covariate meta csv file, containing "R.FileName; age; sex;...";
you may find a start file in the 02_ID_rate folder > file_list.csv column e.g.
covariate_adjusting_meta_data_file = "covariate_MetaData_file.csv"

\emph{example table for covariate meta data:}\tabular{lllll}{
   \if{html}{\out{<u>}} \strong{R.FileName} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{R.FileName_raw} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{R.Condition} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{sex} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{CRP} \if{html}{\out{</u>}} \cr
   20230403_TIMS..._S1-B11_1_6690 \tab 20230403_TIMSTOF_1_S1-B11_1_6690 \tab heathy \tab 1 \tab 3.8 \cr
   20230403_TIMS..._S1-G11_1_6695 \tab 20230403_TIMSTOF_2_S1-G11_1_6695 \tab heathy \tab 2 \tab 5.1 \cr
   20230403_TIMS...3_S1-E7_1_6661 \tab 20230403_TIMSTOF_3_S1-E7_1_6661 \tab heathy \tab 1 \tab 1.2 \cr
   20230403_TIMS...4_S1-A9_1_6673 \tab 20230403_TIMSTOF_4_S1-A9_1_6673 \tab cancer \tab 1 \tab 50.2 \cr
   20230403_TIMS...7_S1-D8_1_6668 \tab 20230403_TIMSTOF_7_S1-D8_1_6668 \tab cancer \tab 2 \tab 30.8 \cr
   20230403_TIMS...9_S1-D3_1_6627 \tab 20230403_TIMSTOF_9_S1-D3_1_6627 \tab cancer \tab 2 \tab 64.1 \cr
}}

\item{skipping_MaxLFQ_median_norm}{logical - if median normalization after MaxLFQ calculation
should be skipped; default = FALSE; applied only if MaxLFQ protein estimation is selected}

\item{costum_colors}{if you would like to use your own colors please provide a named color vector (e.g. c(condition1 = "black", condition2 = "grey")); names should have the same naming and length like the conditions set in Spectronaut}

\item{print.plot}{logical - should a plot of normalization factors be printed}
}
\value{
SpectroPipeR_norm_quant list object with the loaded raw data and processed data tables, in addition to the automatically saved tables and plots
For the description of the generated figures and tables please read the manual & vignettes\tabular{ll}{
   \if{html}{\out{<u>}} \strong{list element} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{description} \if{html}{\out{</u>}} \cr
   data_input_normalized \tab \emph{tibble:} Spectronaut report tibble provided for the analysis \cr
   MedianNormalizationFactor \tab \emph{tibble:} ion normalization factor table \cr
   MedianNormalizationFactor_outlier \tab \emph{tibble:} table containing detected norm. outliers on ion level \cr
   NormFactor_plot \tab \emph{ggplot2 plot:} norm. factor plots \cr
   iBAQ_intensities \tab \emph{tibble:} table containing the iBAQ int. \cr
   iBAQ_intensities_summary \tab \emph{tibble:} table containing the per condition summarized iBAQ int. \cr
   protein_data \tab \emph{tibble:} protein intensity table (e.g. Hi3 or MaxLFQ int.) \cr
   PG_2_peptides_ID_raw \tab \emph{tibble:} with protein groups with at least 2 peptides with peptide \cr
    \tab and replicate count \cr
   protein_data_normalization_factor \tab \emph{tibble:} normalization factor table for protein int. data \cr
   peptide_intensity_filtered_2pep_hi3 \tab \emph{tibble:} if Hi3 protein int. was selected a table containing \cr
    \tab the peptides and intensities used for Hi3 protein intensity calculation \cr
   peptide_intensity \tab \emph{tibble:} peptides intensity table based on norm. ion intensity \cr
   parameter \tab \emph{list:} parameters provided by the user updated with the \cr
    \tab norm_quant_module() parameters \cr
   CV_cumulative_frequency \tab \emph{tibble:} cumulative frequency table on peptide \cr
    \tab and protein intensity level \cr
   sample_length \tab \emph{numberical value:} number of samples in the provided Spectronaut report \cr
}
}
\description{
Function for normalizing and quantifying Spectronaut output reports,
serving as the second step in the pipeline and building upon the initial step of
reading Spectronaut data.
}
\details{
\strong{batch adjustment}

Batch effects refer to systematic differences between batches (groups) of samples in high-throughput experiments.
These differences can arise due to various factors, such as batch variations in sample preparation, handling, processing
procedures and measurement orders. Batch effects can obscure the true biological signal and lead to incorrect conclusions
if not properly accounted for.
In the SpectroPipeR pipeline, the ComBat tool was employed to adjust for batch effects in the datasets where the batch
covariate was known. ComBat utilizes the methodology described in \href{https://pubmed.ncbi.nlm.nih.gov/16632515/}{Johnson et al. 2007}.
It uses an empirical Bayes (EB) framework for adjusting data for batch effects that is robust to outliers in small sample sizes
and performs comparable to existing methods for large samples. \href{https://pubmed.ncbi.nlm.nih.gov/16632515/}{Johnson et al. 2007:}
This method incorporates systematic batch biases common across genes in making adjustments, assuming that phenomena resulting in
batch effects often affect many genes in similar ways (i.e. increased expression, higher variability, etc). Specifically, the
the L/S model parameters are estimated that represent the batch effects by pooling information across peptides in each
batch to shrink the batch effect parameter estimates toward the overall mean of the batch effect estimates (across genes).
These EB estimates are then used to adjust the data for batch effects, providing more robust adjustments for the batch effect on each peptide.
In SpectroPipeR a parametric ComBAT emperical Bayes adjustment is implemented by utilizing the sva-package.

\strong{covariate adjustment}

If a covariate adjustment of peptide intensity data was performed using the users input formula,
a linear mixed model (LMM) was calculated based on that formula per peptide and the outcoming
residuals were added to the mean peptide intensity over the samples. This means that the adjusted
peptide intensities retain their intensity level (low intense peptides keep their low intensity and
high intense ions keep their higher intensity).
}
\examples{
\donttest{
#load library
library(SpectroPipeR)

# use default parameters list
params <- list(output_folder = "../SpectroPipeR_test_folder")

# example input file
example_file_path <- system.file("extdata",
                                "SN_test_HYE_mix_file.tsv",
                                package="SpectroPipeR")

# step 1: load Spectronaut data module
SpectroPipeR_data <- read_spectronaut_module(file = example_file_path,
                                      parameter = params,
                                      print.plot = FALSE)

# step 2: normalize & quantification module
SpectroPipeR_data_quant <- norm_quant_module(SpectroPipeR_data = SpectroPipeR_data)
}
}
