% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_spectronaut_module.R
\name{read_spectronaut_module}
\alias{read_spectronaut_module}
\title{SpectroPipeR: loading Spectronaut data module}
\usage{
read_spectronaut_module(
  file = "",
  ID_condition_filtering = FALSE,
  ID_condition_filtering_percent = 0.5,
  parameter = list(),
  max_chars_file_name_capping = 35,
  print.plot = FALSE,
  report_copy = F
)
}
\arguments{
\item{file}{location (path) of Spectronaut output report;
you should use the \code{Spectronaut_export_scheme()} function for getting a SpectroPipeR report scheme encompassing all mandatory columns}

\item{ID_condition_filtering}{TRUE or FALSE if a condition-wise filtering should be performed}

\item{ID_condition_filtering_percent}{(numerical value ranging from 0 - 1, default = 0.5) define the proportion for the condition-wise ID filtering}

\item{parameter}{\strong{mandatory parameter list element}

\emph{table of list elements:}\tabular{ll}{
   \if{html}{\out{<u>}} \strong{parameter} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{description} \if{html}{\out{</u>}} \cr
   output_folder \tab \strong{mandatory !!!} - \emph{character} - output folder path (abs.) \cr
   ion_q_value_cutoff \tab \strong{default = 0.01} - \emph{numeric} - Q-value used in Spectronaut analysis: Biognosys \cr
    \tab default is 0.01 = 1\% error rate \cr
   id_drop_cutoff \tab \strong{default = 0.3} - \emph{numeric} - value between 0-1 (1 = 100\%); xx percent lower \cr
    \tab than median of ion ID rate => outlier \cr
   normalization_method \tab \strong{default = "median"} - \emph{character} - "median" or Spectronaut - auto-detection \cr
    \tab is per default ON, meaning if normalization was performed in Spectronaut \cr
    \tab this will be detected and preferred over parameter setting here; \cr
    \tab median normalization is the fallback option \cr
   normalization_factor_cutoff_outlier \tab \strong{default = 4} - \emph{numeric} - median off from global median \cr
    \tab (4 means abs. 4fold off) \cr
   filter_oxidized_peptides \tab \strong{default = TRUE} \emph{logical} - if oxidized peptides should be removed before \cr
    \tab peptide quantification \cr
   protein_intensity_estimation \tab \strong{default = "MaxLFQ"} - \emph{character} - Hi3 = Hi3 protein intensity estimation, \cr
    \tab MaxLFQ = MaxLFQ protein intensity estimation \cr
   stat_test \tab \strong{default = "rots"} - \emph{character} - choose statistical test: "rots" = reproducibility \cr
    \tab optimized test statistics, "modt" = moderate t-test (lmfit, eBayes), \cr
    \tab "t" = t-test \cr
   type_slr \tab \strong{default = "median"} - \emph{character} - choose ratio aggregation method: \cr
    \tab "median" or "tukey" is used when calculating protein values \cr
   fold_change \tab \strong{default = 1.5} - \emph{numeric} - fold-change used as cutoff e.g. 1.5 \cr
   p_value_cutoff \tab \strong{default = 0.05} - \emph{numeric} - p-value used as cutoff e.g. 0.05 \cr
   paired \tab \strong{default = FALSE} - \emph{logical} - Should paired statistics be applied? \cr
}
\tabular{l}{
   \if{html}{\out{<u>}}example parameters list (default)\if{html}{\out{</u>}}: \cr
   params <- list(output_folder = "../Spectronaut_example", \cr
   ion_q_value_cutoff = 0.01, \cr
   id_drop_cutoff = 0.3, \cr
   normalization_method = "median", \cr
   normalization_factor_cutoff_outlier = 4, \cr
   filter_oxidized_peptides = T, \cr
   protein_intensity_estimation = "MaxLFQ", \cr
   stat_test = "rots", \cr
   type_slr = "median", \cr
   fold_change = 1.5, \cr
   p_value_cutoff = 0.05, \cr
   paired = FALSE \cr
   ) \cr
}}

\item{max_chars_file_name_capping}{integer, (default = 35) number of max characters used for raw file name presentation; must be adjusted if function}

\item{print.plot}{if TRUE --> printing ID plot on ion level coloring corresponds ID outlier estimate by "id_drop_cutoff" variable}

\item{report_copy}{if TRUE --> copy Spectronaut input report to SpectroPipeR project folder 01_input_data}
}
\value{
SpectroPipeR_data list object with the loaded raw data and processed data tables, in addition to the automatically saved tables and plots.
For the description of the generated figures and tables please read the manual & vignettes\tabular{ll}{
   \if{html}{\out{<u>}} \strong{list element} \if{html}{\out{</u>}} \tab \if{html}{\out{<u>}} \strong{description} \if{html}{\out{</u>}} \cr
   spectronaut_output \tab \emph{tibble:} Spectronaut report tibble provided for the analysis \cr
   SDRF_file \tab \emph{tibble:} intermediate SDRF table of the analysis \cr
   summary_distinct \tab \emph{tibble:} distinct ion, modified peptide, stripped peptides and \cr
    \tab protein group count per file filtered by provided Q-value \cr
   raw_file_names \tab \emph{tibble:} R.FileNames capped and uncapped version together with \cr
    \tab R.Condition and R.Replicate \cr
   ion_id_median \tab \emph{numerical value:} median of ion intensity \cr
   ion_id_cutoff \tab \emph{numerical value:} ion ID count threshold to classify sample as outlier \cr
   PG_2_peptides_ID_raw \tab \emph{tibble:} with protein groups with at least 2 peptides with peptide \cr
    \tab and replicate count \cr
   summary_distinct_outlier \tab \emph{tibble:} if outlier are detected they are listed in this tibble \cr
   ID_rate_plot \tab \emph{ggplot2 plot:} ID rate plot \cr
   ID_rate_plot_filter \tab \emph{ggplot2 plot:} ion ID rate plot with ion ID cutoff line \cr
   sample_length \tab \emph{numberical value:} number of samples in the provided Spectronaut report \cr
   parameter \tab \emph{list:} parameters provided by the user \cr
   time_stamp_log_file \tab \emph{string:} time stamp of the log file (format: \%Y_\%m_\%d__\%H_\%M) \cr
   log_file_name \tab \emph{string:} analysis log file name \cr
}
}
\description{
Function for loading Spectronaut data and performing identification (ID) analysis, which is an essential first step in the SpectroPipeR workflow.
}
\examples{
\donttest{
#load library
library(SpectroPipeR)

# use default parameters list
params <- list(output_folder = "../SpectroPipeR_test_folder")

# example input file
example_file_path <- system.file("extdata",
                                "SN_test_HYE_mix_file.tsv",
                                package="SpectroPipeR")

# step 1: load Spectronaut data module
SpectroPipeR_data <- read_spectronaut_module(file = example_file_path,
                                            parameter = params,
                                            print.plot = FALSE)
}
}
